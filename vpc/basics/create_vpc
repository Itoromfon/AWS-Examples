#!/usr/bin/env bash

# Create our VPC

VPC_ID=$(aws ec2 create-vpc \
--cidr-block "172.1.0.0/16" \
--tag-specification 'ResourceType=vpc,Tags=[{Key=Name,Value=my-vpc-3}]' \  
--region us-east-1 \
--query Vpc.VpcId
--output text)

echo "VPC_ID: $VPC_ID"

# Create an IGW

IGW_ID=$(aws ec2 create-internet-gateway \
--query InternetGateway.InternetGatewayId
--output text
)

# Attach an IGW

aws ec2 attach-internet-gateway --internet-gateway-id $IGW_ID --vpc-id $VPC_ID

# Create a new subnet

SUBNET_ID=$(aws ec2 create-subnet \
--vpc-id $VPC_ID \
--cidr-block 172.1.0.0/20 \
--query Subnet.SubnetId \
--output text)

echo "SUBNET_ID: $SUBNET_ID"

# auto assign IPv4 address

aws ec2 modify-subnet-attribute --subnet-id $SUBNET_ID --map-public-ip-on-launch

# Explicitly Associate subnet

echo "RT_ID: $RT_ID"

aws ec2 associate-route-table \
--route-table-id $RT_ID \
--subnet-id $SUBNET_ID

# Add a route for our RT to our IGW

aws ec2 create-route \
--route-table-id $RT_ID \
--destination-cidr-block 0.0.0.0/0 \
--gateway-id $IGW_ID

# dissociate the subnet
$ASSOC_ID=$(aws ec2 describe-route-tables \
--route-table-ids $RT_ID \
--filters "Name=associate.subnet-id,Values=$SUBNET_ID" \
--query "RouteTables[].Associations[?SubnetId=='$SUBNET_ID'].RouteTableAssociationId[]" \
--output text)

aws ec2 disassociate-route-table --associate-id rtbassoc-abc123

# detach an IGW

aws ec2 detach-internet-gateway --internet-gateway-id <igw-id> --vpc-id <vpc-id>

# delete an IGW 

aws ec2 delete-internet-gateway --internet-gateway-id <igw-id>

# delete the subnet

aws ec2 delete-subnet --subnet-id <subnet-id>

# delete the route table

aws ec2 delete-route-table --route-table-id <route-table-id>

# delete the VPC

aws ec2 delete-vpc --vpc-id <vpc-id>

# Print out our delete command 

echo "./delete_vpc $VPC_ID $IGW_ID $SUBNET_ID $RT_ID"

